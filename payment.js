document.addEventListener("DOMContentLoaded", function () {
    console.log("DOM –∑–∞–≥—Ä—É–∂–µ–Ω!");

    document.querySelectorAll(".buy-btn").forEach(button => {
        button.addEventListener("click", function () {
            const item = this.closest(".item");
            const productName = item.querySelector(".product-name").textContent.trim();
            const productPrice = item.querySelector(".product-price").textContent.trim();

            openPaymentModal(productName, productPrice);
        });
    });
});

function openPaymentModal(productName, productPrice) {
    const modalHTML = `
        <div class="payment-overlay">
            <div class="payment-modal">
                <h2>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <br> "${productName}" –∑–∞ ${productPrice}?</h2>
                <div class="payment-options">
                    <button class="payment-method" data-method="kaspi-gold">Kaspi Gold</button>
                    <button class="payment-method" data-method="kaspi-red">Kaspi Red</button>
                    <button class="payment-method" data-method="kaspi-qr">Kaspi QR</button>
                    <button class="payment-method" data-method="card">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</button>
                </div>
                <button class="close-payment">–û—Ç–º–µ–Ω–∞</button>
                <div class="payment-content"></div>
            </div>
        </div>
    `;

    document.body.insertAdjacentHTML("beforeend", modalHTML);
    
    const paymentOverlay = document.querySelector(".payment-overlay");
    const closeButton = document.querySelector(".close-payment");

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞
    closeButton.addEventListener("click", () => paymentOverlay.remove());

    // –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    document.querySelectorAll(".payment-method").forEach(button => {
        button.addEventListener("click", function () {
            const method = this.dataset.method;
            handlePaymentMethod(method, productName, productPrice);
        });
    });

    console.log("‚úÖ payment-modal —Å–æ–∑–¥–∞–Ω:", document.querySelector(".payment-modal"));
}

// üîç **–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è `.payment-modal`**
const observer = new MutationObserver(() => {
    const modal = document.querySelector(".payment-modal");
    if (modal) {
        console.log("‚úÖ payment-modal –ø–æ—è–≤–∏–ª—Å—è –≤ DOM:", modal);
        observer.disconnect(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
    }
});

observer.observe(document.body, { childList: true, subtree: true });

function handlePaymentMethod(method, productName, productPrice) {
    const paymentContent = document.querySelector(".payment-content");
    
    if (method === "kaspi-qr") {
        paymentContent.innerHTML = `
            <h3>–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ Kaspi –¥–ª—è –æ–ø–ª–∞—Ç—ã</h3>
            <img src="images/abylll.png" alt="Kaspi QR">
        `;
    } else if (method === "card") {
        paymentContent.innerHTML = `
            <h3>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã</h3>
            <input type="text" placeholder="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã" class="card-number">
            <input type="text" placeholder="–°—Ä–æ–∫ (MM/YY)" class="card-expiry">
            <input type="text" placeholder="CVC" class="card-cvc">
            <button class="confirm-payment">–û–ø–ª–∞—Ç–∏—Ç—å</button>
        `;

        document.querySelector(".confirm-payment").addEventListener("click", () => {
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã –∏ –æ–ø–ª–∞—Ç—ã
            alert("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!");
            document.querySelector(".payment-overlay").remove();
        });
    } else {
        alert(`–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ ${method.toUpperCase()} –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!`);
        document.querySelector(".payment-overlay").remove();
    }
}

console.log("–§–∞–π–ª payment.js –∑–∞–≥—Ä—É–∂–µ–Ω!");
